import OpenAI from "openai";
const client = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

export const handler = async (event) => {
  try {
    const { name, dob, birthTime, city, country } = JSON.parse(event.body);

    const prompt = `
рдЖрдк рдПрдХ рдЕрдиреБрднрд╡реА рд╡реИрджрд┐рдХ рдЕрдВрдХ рдЬреНрдпреЛрддрд┐рд╖ рд╡рд┐рд╢реЗрд╖рдЬреНрдЮ рд╣реИрдВред
рдиреАрдЪреЗ рджреА рдЧрдИ рдЬрд╛рдирдХрд╛рд░реА рдХреЗ рдЖрдзрд╛рд░ рдкрд░ рд╡реНрдпрдХреНрддрд┐ рдХрд╛ рд╕рдВрдкреВрд░реНрдг рд╡рд┐рд╢реНрд▓реЗрд╖рдг рд╣рд┐рдВрджреА рдореЗрдВ рдкреНрд░рд╕реНрддреБрдд рдХрд░реЗрдВред

рдирд╛рдо: ${name}
рдЬрдиреНрдо рддрд┐рдерд┐: ${dob}
рдЬрдиреНрдо рд╕рдордп: ${birthTime || "рдЕрдЬреНрдЮрд╛рдд"}
рд╢рд╣рд░: ${city}
рджреЗрд╢: ${country}

рдЙрддреНрддрд░ рдХреЛ рдирд┐рдореНрдирд▓рд┐рдЦрд┐рдд рд╕рдВрд░рдЪрдирд╛ рдореЗрдВ рджреЗрдВ:
- рд╢реБрдн рдЕрдВрдХ
- рднрд╛рдЧреНрдпрд╛рдВрдХ
- рд╢реБрдн рд░рдВрдЧ
- рд╢реБрдн рд╡рд░реНрд╖
- рд╢реБрдн рджрд┐рди рдФрд░ рддрд┐рдерд┐
- рдХрд┐рд╕ рджреЗрд╡рддрд╛ рдХреА рдЙрдкрд╛рд╕рдирд╛ рдХрд░рдиреА рдЪрд╛рд╣рд┐рдП
- рдХреНрдпрд╛ рдФрд░ рдХрдм рджрд╛рди рдХрд░рдирд╛ рдЪрд╛рд╣рд┐рдП
- рдЕрдиреБрд╢рдВрд╕рд┐рдд рдордВрддреНрд░

ЁЯХЙя╕П рдХреГрдкрдпрд╛ рдЙрддреНрддрд░ рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рдФрд░ рд╕рдВрдХреНрд╖рд┐рдкреНрдд рд░реВрдк рдореЗрдВ рджреЗрдВ, рдХреЗрд╡рд▓ рд╣рд┐рдВрджреА рднрд╛рд╖рд╛ рдореЗрдВред
`;

    const completion = await client.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [
        { role: "system", content: "рдЖрдк рд╣рдореЗрд╢рд╛ рд╕рднреА рдЙрддреНрддрд░ рд╣рд┐рдВрджреА рднрд╛рд╖рд╛ рдореЗрдВ рджреЗрдВрдЧреЗред" },
        { role: "user", content: prompt },
      ],
    });

    const analysis = completion.choices[0].message.content.trim();
    return { statusCode: 200, body: JSON.stringify({ analysis }) };
  } catch (err) {
    console.error("тЭМ Numerology error:", err);
    return {
      statusCode: 500,
      body: JSON.stringify({ error: "Numerology generation failed." }),
    };
  }
};
