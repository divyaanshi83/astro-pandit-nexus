import OpenAI from "openai";

export async function handler(event) {
  try {
    const { sign, day = "today" } = event.queryStringParameters;

    if (!sign) {
      return {
        statusCode: 400,
        body: JSON.stringify({ success: false, error: "Missing zodiac sign" }),
      };
    }

    // ‚úÖ Ensure your OpenAI API key is available
    const apiKey = process.env.OPENAI_API_KEY;
    if (!apiKey) {
      console.error("Missing OpenAI API key");
      return {
        statusCode: 500,
        body: JSON.stringify({
          success: false,
          error: "Missing OpenAI API key. Please set OPENAI_API_KEY in your environment.",
        }),
      };
    }

    // ‚úÖ Initialize OpenAI client
    const client = new OpenAI({ apiKey });

    // ü™ê Prompt for generating horoscope
    const prompt = `
    You are an expert astrologer. 
    Generate a positive, insightful horoscope for the zodiac sign "${sign}" for "${day}".
    Include predictions for love, career, and health.
    Keep it under 200 words and friendly in tone.
    `;

    // ‚úÖ Call OpenAI model
    const completion = await client.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [{ role: "user", content: prompt }],
    });

    const horoscopeText = completion.choices[0]?.message?.content?.trim();

    if (!horoscopeText) {
      throw new Error("No horoscope text generated by OpenAI");
    }

    // ‚úÖ Return success response
    return {
      statusCode: 200,
      body: JSON.stringify({
        success: true,
        sign,
        day,
        horoscope: horoscopeText,
      }),
    };
  } catch (error) {
    console.error("Error generating horoscope:", error);
    return {
      statusCode: 500,
      body: JSON.stringify({
        success: false,
        error: "Failed to generate horoscope",
        details: error.message,
      }),
    };
  }
}

